/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.prelude.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.UUIDByteConverter;
import com.psygate.minecraft.spigot.sovereignty.prelude.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.prelude.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.prelude.db.model.tables.records.PreludeOverridesLogRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PreludeOverridesLog extends TableImpl<PreludeOverridesLogRecord> {

	private static final long serialVersionUID = -869212545;

	/**
	 * The reference instance of <code>nucleus.prelude_overrides_log</code>
	 */
	public static final PreludeOverridesLog PRELUDE_OVERRIDES_LOG = new PreludeOverridesLog();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PreludeOverridesLogRecord> getRecordType() {
		return PreludeOverridesLogRecord.class;
	}

	/**
	 * The column <code>nucleus.prelude_overrides_log.puuid</code>.
	 */
	public final TableField<PreludeOverridesLogRecord, UUID> PUUID = createField("puuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * The column <code>nucleus.prelude_overrides_log.force_dedication</code>.
	 */
	public final TableField<PreludeOverridesLogRecord, Byte> FORCE_DEDICATION = createField("force_dedication", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.prelude_overrides_log.enforced_by</code>.
	 */
	public final TableField<PreludeOverridesLogRecord, byte[]> ENFORCED_BY = createField("enforced_by", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "");

	/**
	 * Create a <code>nucleus.prelude_overrides_log</code> table reference
	 */
	public PreludeOverridesLog() {
		this("prelude_overrides_log", null);
	}

	/**
	 * Create an aliased <code>nucleus.prelude_overrides_log</code> table reference
	 */
	public PreludeOverridesLog(String alias) {
		this(alias, PRELUDE_OVERRIDES_LOG);
	}

	private PreludeOverridesLog(String alias, Table<PreludeOverridesLogRecord> aliased) {
		this(alias, aliased, null);
	}

	private PreludeOverridesLog(String alias, Table<PreludeOverridesLogRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PreludeOverridesLogRecord> getPrimaryKey() {
		return Keys.KEY_PRELUDE_OVERRIDES_LOG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PreludeOverridesLogRecord>> getKeys() {
		return Arrays.<UniqueKey<PreludeOverridesLogRecord>>asList(Keys.KEY_PRELUDE_OVERRIDES_LOG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludeOverridesLog as(String alias) {
		return new PreludeOverridesLog(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PreludeOverridesLog rename(String name) {
		return new PreludeOverridesLog(name, null);
	}
}
