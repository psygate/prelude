/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.prelude.db.model.tables.records;


import com.psygate.minecraft.spigot.sovereignty.prelude.db.model.tables.PreludePlayerData;
import com.psygate.minecraft.spigot.sovereignty.prelude.db.model.tables.interfaces.IPreludePlayerData;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PreludePlayerDataRecord extends UpdatableRecordImpl<PreludePlayerDataRecord> implements Record9<UUID, Long, Long, Double, Long, Long, Long, Integer, Boolean>, IPreludePlayerData {

	private static final long serialVersionUID = 938951374;

	/**
	 * Setter for <code>nucleus.prelude_player_data.puuid</code>.
	 */
	public void setPuuid(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>nucleus.prelude_player_data.puuid</code>.
	 */
	@Override
	public UUID getPuuid() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>nucleus.prelude_player_data.break_count</code>.
	 */
	public void setBreakCount(Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>nucleus.prelude_player_data.break_count</code>.
	 */
	@Override
	public Long getBreakCount() {
		return (Long) getValue(1);
	}

	/**
	 * Setter for <code>nucleus.prelude_player_data.place_count</code>.
	 */
	public void setPlaceCount(Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>nucleus.prelude_player_data.place_count</code>.
	 */
	@Override
	public Long getPlaceCount() {
		return (Long) getValue(2);
	}

	/**
	 * Setter for <code>nucleus.prelude_player_data.meters_walked</code>.
	 */
	public void setMetersWalked(Double value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>nucleus.prelude_player_data.meters_walked</code>.
	 */
	@Override
	public Double getMetersWalked() {
		return (Double) getValue(3);
	}

	/**
	 * Setter for <code>nucleus.prelude_player_data.xp_gained</code>.
	 */
	public void setXpGained(Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>nucleus.prelude_player_data.xp_gained</code>.
	 */
	@Override
	public Long getXpGained() {
		return (Long) getValue(4);
	}

	/**
	 * Setter for <code>nucleus.prelude_player_data.saturation_gained</code>.
	 */
	public void setSaturationGained(Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>nucleus.prelude_player_data.saturation_gained</code>.
	 */
	@Override
	public Long getSaturationGained() {
		return (Long) getValue(5);
	}

	/**
	 * Setter for <code>nucleus.prelude_player_data.millis_played</code>.
	 */
	public void setMillisPlayed(Long value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>nucleus.prelude_player_data.millis_played</code>.
	 */
	@Override
	public Long getMillisPlayed() {
		return (Long) getValue(6);
	}

	/**
	 * Setter for <code>nucleus.prelude_player_data.millis_tracking_month</code>.
	 */
	public void setMillisTrackingMonth(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>nucleus.prelude_player_data.millis_tracking_month</code>.
	 */
	@Override
	public Integer getMillisTrackingMonth() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>nucleus.prelude_player_data.forced_dedication</code>.
	 */
	public void setForcedDedication(Boolean value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>nucleus.prelude_player_data.forced_dedication</code>.
	 */
	@Override
	public Boolean getForcedDedication() {
		return (Boolean) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<UUID, Long, Long, Double, Long, Long, Long, Integer, Boolean> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<UUID, Long, Long, Double, Long, Long, Long, Integer, Boolean> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return PreludePlayerData.PRELUDE_PLAYER_DATA.PUUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return PreludePlayerData.PRELUDE_PLAYER_DATA.BREAK_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field3() {
		return PreludePlayerData.PRELUDE_PLAYER_DATA.PLACE_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field4() {
		return PreludePlayerData.PRELUDE_PLAYER_DATA.METERS_WALKED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field5() {
		return PreludePlayerData.PRELUDE_PLAYER_DATA.XP_GAINED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field6() {
		return PreludePlayerData.PRELUDE_PLAYER_DATA.SATURATION_GAINED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field7() {
		return PreludePlayerData.PRELUDE_PLAYER_DATA.MILLIS_PLAYED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return PreludePlayerData.PRELUDE_PLAYER_DATA.MILLIS_TRACKING_MONTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field9() {
		return PreludePlayerData.PRELUDE_PLAYER_DATA.FORCED_DEDICATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getPuuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getBreakCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value3() {
		return getPlaceCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value4() {
		return getMetersWalked();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value5() {
		return getXpGained();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value6() {
		return getSaturationGained();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value7() {
		return getMillisPlayed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getMillisTrackingMonth();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value9() {
		return getForcedDedication();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludePlayerDataRecord value1(UUID value) {
		setPuuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludePlayerDataRecord value2(Long value) {
		setBreakCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludePlayerDataRecord value3(Long value) {
		setPlaceCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludePlayerDataRecord value4(Double value) {
		setMetersWalked(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludePlayerDataRecord value5(Long value) {
		setXpGained(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludePlayerDataRecord value6(Long value) {
		setSaturationGained(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludePlayerDataRecord value7(Long value) {
		setMillisPlayed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludePlayerDataRecord value8(Integer value) {
		setMillisTrackingMonth(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludePlayerDataRecord value9(Boolean value) {
		setForcedDedication(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PreludePlayerDataRecord values(UUID value1, Long value2, Long value3, Double value4, Long value5, Long value6, Long value7, Integer value8, Boolean value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PreludePlayerDataRecord
	 */
	public PreludePlayerDataRecord() {
		super(PreludePlayerData.PRELUDE_PLAYER_DATA);
	}

	/**
	 * Create a detached, initialised PreludePlayerDataRecord
	 */
	public PreludePlayerDataRecord(UUID puuid, Long breakCount, Long placeCount, Double metersWalked, Long xpGained, Long saturationGained, Long millisPlayed, Integer millisTrackingMonth, Boolean forcedDedication) {
		super(PreludePlayerData.PRELUDE_PLAYER_DATA);

		setValue(0, puuid);
		setValue(1, breakCount);
		setValue(2, placeCount);
		setValue(3, metersWalked);
		setValue(4, xpGained);
		setValue(5, saturationGained);
		setValue(6, millisPlayed);
		setValue(7, millisTrackingMonth);
		setValue(8, forcedDedication);
	}
}
